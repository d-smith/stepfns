service: model-proc

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    STEP_A_FAILURE_PROB: 0
    STEP_C_FAILURE_PROB: 0
    STEP_E1_FAILURE_PROB: 0
    STEP_E2_FAILURE_PROB: 0

functions:
  stepA:
    handler: manysteps.stepA
  stepB:
    handler: manysteps.stepB
  stepC:
    handler: manysteps.stepC
  stepD:
    handler: manysteps.stepD
  stepE:
    handler: manysteps.stepE

stepFunctions:
  stateMachines:
    hellostepfunc1:
      events:
        - http:
            path: start-sample-proc
            method: post
      definition:
        Comment: "A process model"
        StartAt: step-a
        States:
          step-a:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-stepA"
            Next: step-b
          step-b:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-stepB"
            Next: step-c
          step-c:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-stepC"
            Next: step-d
          step-d:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-stepD"
            Next: step-e
          step-e:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-stepE"
            End: true



plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
